image: docker:20.10

services:
  - docker:20.10-dind

variables:
  DOCKER_TLS_CERTDIR: "/certs"


stages:
  - build
  - test
  - deploy

before_script:
  - apk update
  - apk add py3-pip
  - apk add docker-compose
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY


build:
  stage: build
  script:
    - docker-compose -f docker-compose-production.yml build
    - docker-compose -f docker-compose-production.yml push
  artifacts:
    paths:
      - docker-compose-production.yml
  only:
    - main

test:
  stage: test
  script:
    - docker-compose -f docker-compose-production.yml run web_app python manage.py test
  dependencies:
    - build
  only:
    - test

deploy:
  stage: deploy
  environment:
    name: production
  script:
    - chmod og= $ID_RSA
    - apk update && apk add openssh-client
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "ls -a"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker-compose -f docker-compose-production.yml pull"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker-compose -f docker-compose-production.yml up -d"
  dependencies:
    - build
  only:
    - main




